name: Robot Framework Tests

on:
  push:
    branches: [ "main", "develop" ]   # ajuste para suas branches
  pull_request:

jobs:
  robot-run:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Instalar Python e dependências
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-seleniumlibrary
          pip install webdrivermanager

      # 3. Instalar Chrome e ChromeDriver
      - name: Install Chrome & ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip xvfb libxi6 libgconf-2-4 libnss3 libasound2 fonts-liberation libappindicator3-1 xdg-utils
          
          wget -O chrome.zip https://storage.googleapis.com/chrome-for-testing-public/140.0.7339.82/linux64/chrome-linux64.zip
          unzip chrome.zip -d chrome
          sudo mv chrome/chrome-linux64 /opt/google-chrome
          sudo ln -s /opt/google-chrome/chrome /usr/bin/google-chrome

          wget -O chromedriver.zip https://storage.googleapis.com/chrome-for-testing-public/140.0.7339.82/linux64/chromedriver-linux64.zip
          unzip chromedriver.zip -d chromedriver
          sudo mv chromedriver/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver

      # 4. Rodar os testes no modo headless
      - name: Run Robot Framework tests
        run: |
          xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' robot -d output tests/

      # 5. Salvar relatórios como artefatos do GitHub Actions
      - name: Upload Robot Framework reports
        uses: actions/upload-artifact@v4
        with:
          name: robot-reports
          path: output/